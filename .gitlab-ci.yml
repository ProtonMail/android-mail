default:
  image: $CI_REGISTRY/protonvpn/android/android-app-new:branch-mail-v6-ci-dockerfile
before_script:
  - mkdir app/src/uiTest/assets
  - base64 -d - < "$TEST_USERS_CREDENTIALS_FILE" > app/src/uiTest/assets/users.json
  - base64 -d - < "$PRIVATE_PROPERTIES_FILE" > private.properties
  - export JAVA_TOOL_OPTIONS="-Dhttp.proxyHost=$( echo ${http_proxy##http://} | cut -d':' -f1 ) -Dhttp.proxyPort=$( echo ${http_proxy##http://} | cut -d':' -f2 ) -Dhttps.proxyHost=$( echo ${https_proxy##http://} | cut -d':' -f1 ) -Dhttps.proxyPort=$( echo ${https_proxy##http://} | cut -d':' -f2 ) -Dhttp.nonProxyHosts=\"$( echo $no_proxy | tr ',' '|' )\""
  - bundle install

variables:
  GIT_SUBMODULE_STRATEGY: recursive

cache:
  - key: $CI_COMMIT_REF_SLUG
    policy: pull
    paths:
      - .gradle

stages:
  - analyse
  - localise
  - build
  - test
  - report
  - deploy

.build_job:
  stage: build
  tags:
    - large
  artifacts:
    paths:
      - app/build/outputs


analyse:
  stage: analyse
  cache:
    - key: $CI_COMMIT_REF_SLUG
      policy: pull-push
      paths:
        - .gradle
  tags:
    - medium
  script:
    - bundle exec fastlane analyse
  artifacts:
    expire_in: 1 month
    reports:
      codequality: config/detekt/reports/mergedReport.json


localise-sync-crowdin:
  stage: localise
  variables:
      I18N_SYNC_CROWDIN_PROJECT: 'android-mail-new'
  extends: .i18n-sync-crowdin-shared

localise-commit-locales:
  stage: localise
  variables:
      I18N_COMMIT_CROWDIN_PROJECT: 'android-mail-new'
  extends: .i18n-commit-locales-shared


build_debug:
  extends: .build_job
  script:
    - echo PROXY_TOKEN="$(curl -o - https://proxy.proton.black/token/get)" >> private.properties
    - bundle exec fastlane assembleDebug
    - bundle exec fastlane assembleTest


build_release:
  extends: .build_job
  only:
    - master
  script:
    - bundle exec fastlane assembleRelease


run_unit_test:
  stage: test
  tags:
    - medium
  dependencies:
    - build_debug
  script:
    - bundle exec fastlane unitTest


run_firebase_instrumentation_tests:
  stage: test
  dependencies:
    - build_debug
  tags:
    - small
  script:
    - wget --quiet --output-document=/tmp/google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz
    - mkdir -p /opt
    - tar zxf /tmp/google-cloud-sdk.tar.gz --directory /opt
    - /opt/google-cloud-sdk/install.sh --quiet
    - source /opt/google-cloud-sdk/path.bash.inc
    - gcloud components update
    - echo $CLOUD_PROJECT_ID_MAIL
    - gcloud config set project $CLOUD_PROJECT_ID_MAIL
    - echo $SERVICE_ACCOUNT_MAIL > /tmp/service-account.json
    - gcloud auth activate-service-account --key-file /tmp/service-account.json
    - gcloud firebase test android run
      --app app/build/outputs/apk/dev/debug/app-dev-debug.apk
      --test app/build/outputs/apk/androidTest/dev/debug/app-dev-debug-androidTest.apk
      --type=instrumentation
      --device model=Pixel2,version=28
      --test-targets "notPackage ch.protonmail.android.uitest"
      --use-orchestrator
      --num-flaky-test-attempts=1
      --timeout 10m


run_firebase_ui_tests:
  stage: test
  dependencies:
    - build_debug
  tags:
    - small
  script:
    - wget --quiet --output-document=/tmp/google-cloud-sdk.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz
    - mkdir -p /opt
    - tar zxf /tmp/google-cloud-sdk.tar.gz --directory /opt
    - /opt/google-cloud-sdk/install.sh --quiet
    - source /opt/google-cloud-sdk/path.bash.inc
    - gcloud components update
    - echo $CLOUD_PROJECT_ID_MAIL
    - gcloud config set project $CLOUD_PROJECT_ID_MAIL
    - echo $SERVICE_ACCOUNT_MAIL > /tmp/service-account.json
    - gcloud auth activate-service-account --key-file /tmp/service-account.json
    - gcloud --quiet firebase test android run firebase-device-config.yml:quickTest
      --app app/build/outputs/apk/dev/debug/app-dev-debug.apk
      --test app/build/outputs/apk/androidTest/dev/debug/app-dev-debug-androidTest.apk
      --test-targets "class ch.protonmail.android.uitest.test.suite.SmokeSuite"
      --use-orchestrator
      --num-flaky-test-attempts=1
      --timeout 10m


coverage report:
  stage: report
  tags:
    - large
  script:
    - ./gradlew coberturaCoverageReport
  artifacts:
    expire_in: 1 week
    paths:
      - app/build/reports
    reports:
      cobertura: app/build/reports/cobertura-coverage.xml


deploy_to_firebase:
  stage: deploy
  only:
    - master
  dependencies:
    - build_release
  tags:
    - small
  script:
    - echo $SERVICE_ACCOUNT_MAIL > /tmp/service-account.json
    - bundle exec fastlane deployToFirebase


include:
  - project: 'translations/generator'
    ref: master
    file: '/jobs/sync-crowdin.gitlab-ci.yml'

  - project: 'translations/generator'
    ref: master
    file: '/jobs/commit-locales.gitlab-ci.yml'
